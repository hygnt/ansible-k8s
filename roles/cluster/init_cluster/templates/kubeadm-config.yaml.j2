apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{ CURRENT_HOST_IP }}
  bindPort: 6443
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
clusterName: kubernetes
imageRepository: {{ k8s_img_repo }}
etcd:
  external:
    endpoints:
    - https://{{ master1_ip }}:2379
    - https://{{ master2_ip }}:2379
    - https://{{ master3_ip }}:2379
    caFile: "/etc/kubernetes/pki/etcd/ca.pem"
    certFile: "/etc/kubernetes/pki/etcd/etcd.pem"
    keyFile: "/etc/kubernetes/pki/etcd/etcd-key.pem"
networking:
  dnsDomain: cluster.local
  podSubnet: 10.244.0.0/16
  serviceSubnet: 10.96.0.0/12
kubernetesVersion: v{{ kube_ver }}
controlPlaneEndpoint: {{ vip }}:8443
apiServer:
  extraArgs:
    authorization-mode: "Node,RBAC"
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeClaimResize,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,Priority,PodPreset"
    allow-privileged: "true"
    enable-aggregator-routing: "true"
    service-node-port-range: 20000-65535
    apiserver-count: "{{ groups['k8s-master']|length }}"
    feature-gates: LocalStorageCapacityIsolation=true
    runtime-config: api/all=true,settings.k8s.io/v1alpha1=true,batch/v2alpha1=true
  timeoutForControlPlane: 4m0s
  certSANs:
  - {{ master1_ip }}
  - {{ master2_ip }}
  - {{ master3_ip }}
  - {{ vip }}
  - 127.0.0.1
  - kubernetes
  - kubernetes.default 
  - kubernetes.default.svc 
  - kubernetes.default.svc.cluster
  - kubernetes.default.svc.cluster.local
  extraVolumes:
  - hostPath: /etc/localtime
    mountPath: /etc/localtime
    name: localtime
    readOnly: true
controllerManager:
  extraArgs:
    bind-address: 0.0.0.0
    feature-gates: LocalStorageCapacityIsolation=true,RotateKubeletServerCertificate=true,RotateKubeletClientCertificate=true
    experimental-cluster-signing-duration: 876000h
    horizontal-pod-autoscaler-cpu-initialization-period: 60s
    horizontal-pod-autoscaler-downscale-stabilization: 60s
  extraVolumes:
  - hostPath: /etc/localtime
    mountPath: /etc/localtime
    name: localtime
    readOnly: true
scheduler:
  extraArgs:
    bind-address: 0.0.0.0
    feature-gates: LocalStorageCapacityIsolation=true
  extraVolumes:
  - hostPath: /etc/localtime
    mountPath: /etc/localtime
    name: localtime
    readOnly: true
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
address: 0.0.0.0
cgroupDriver: {{ docker_cgroup_driver.stdout }}
cgroupsPerQOS: true
configMapAndSecretChangeDetectionStrategy: Watch
containerLogMaxFiles: 5
containerLogMaxSize: 10Mi
contentType: application/vnd.kubernetes.protobuf
cpuCFSQuota: true
cpuCFSQuotaPeriod: 100ms
cpuManagerPolicy: none
cpuManagerReconcilePeriod: 10s
enableControllerAttachDetach: true
enableDebuggingHandlers: true
enforceNodeAllocatable:
- pods
eventBurst: 10
eventRecordQPS: 5
evictionHard:
  imagefs.available: {{ eviction_hard_imagefs_available }}
  memory.available: {{ eviction_hard_memory_available }}
  nodefs.available: {{ eviction_hard_nodefs_available }}
  nodefs.inodesFree: {{ eviction_hard_nodefs_inodes_free }}
kubeReserved:
  cpu: {{ kube_cpu_reserved }}
  memory: {{ kube_memory_reserved|regex_replace('Mi', 'M') }}
{% if system_reserved_enabled is defined and system_reserved_enabled %}
systemReserved:
  cpu: {{ system_cpu_reserved|default('500m') }}
  memory: {{ system_memory_reserved|default('512M')|regex_replace('Mi', 'M') }}
  ephemeral-storage: {{ system_ephemeral_storage_reserved|default('10Gi')|regex_replace('Gi', 'G') }}
{% endif %}
evictionPressureTransitionPeriod: 5m0s
failSwapOn: true
imageGCHighThresholdPercent: 85
imageGCLowThresholdPercent: 80
imageMinimumGCAge: 2m0s
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
clusterCIDR: 10.244.0.0/16
configSyncPeriod: 15m0s
conntrack:
  maxPerCore: 32768
  min: 131072
  tcpCloseWaitTimeout: 1h0m0s
  tcpEstablishedTimeout: 24h0m0s
enableProfiling: false
healthzBindAddress: 0.0.0.0:10256
hostnameOverride: ""
ipvs:
  excludeCIDRs: null
  minSyncPeriod: 0s
  scheduler: ""
  strictARP: false
  syncPeriod: 30s
mode: ipvs
